#!/bin/bash --login

# PBS job options (name, compute nodes, job time)
# PBS -N is the job name (e.g. Example_OMP_Job)
#PBS -N MPIC_test
# PBS -l select is the number of nodes requested (e.g. 1 node=24 cores)
#PBS -l select=1
# PBS -l walltime, maximum walltime allowed (e.g. 12 hours)
#PBS -l walltime=0:20:0

# Replace [budget code] below with your project code (e.g. t01)
#PBS -A z19-cse

# Make sure any symbolic links are resolved to absolute path
export PBS_O_WORKDIR=$(readlink -f $PBS_O_WORKDIR)               

# Change to the direcotry that the job was submitted from
# (remember this should be on the /work filesystem)
cd $PBS_O_WORKDIR

#module load atp
#export ATP_ENABLED=1

export OMP_STACKSIZE=1G
export KMP_AFFINITY=disabled

# Set the number of threads to 12
export OMP_NUM_THREADS=12

# Launch the parallel job
#   Using 1 processes and 12 OpenMP threads
aprun -n 1 -cc none -d $OMP_NUM_THREADS ./main > 12.txt


# Set the number of threads to 12
export OMP_NUM_THREADS=8

# Launch the parallel job
#   Using 1 processes and 12 OpenMP threads
aprun -n 1 -cc none -d $OMP_NUM_THREADS ./main > 8.txt

# Set the number of threads to 12
export OMP_NUM_THREADS=6

# Launch the parallel job
#   Using 1 processes and 12 OpenMP threads
aprun -n 1 -cc none -d $OMP_NUM_THREADS ./main > 6.txt

# Set the number of threads to 12
export OMP_NUM_THREADS=4

# Launch the parallel job
#   Using 1 processes and 12 OpenMP threads
aprun -n 1 -cc none -d $OMP_NUM_THREADS ./main > 4.txt


# Set the number of threads to 12
export OMP_NUM_THREADS=2

# Launch the parallel job
#   Using 1 processes and 12 OpenMP threads
aprun -n 1 -cc none -d $OMP_NUM_THREADS ./main > 2.txt

# Set the number of threads to 12
export OMP_NUM_THREADS=1

# Launch the parallel job
#   Using 1 processes and 12 OpenMP threads
aprun -n 1 -cc none -d $OMP_NUM_THREADS ./main > 1.txt
